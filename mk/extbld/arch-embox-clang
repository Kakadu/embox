#!/bin/bash

if [ $EMBOX_GCC_ENV ] && [ -f $EMBOX_GCC_ENV ]; then
	. $EMBOX_GCC_ENV
else
	echo "No EMBOX_GCC_ENV is set" >&2
	exit 1
fi

cmd=$(basename $0)
case $cmd in
	*-clang)   C_CXX_FLAGS="$EMBOX_IMPORTED_CPPFLAGS $EMBOX_IMPORTED_CFLAGS";;
	*-clang++) C_CXX_FLAGS="$EMBOX_IMPORTED_CPPFLAGS $EMBOX_IMPORTED_CXXFLAGS";;
	*)     echo "Unknown flags for $cmd"; exit 1;;
esac

case $EMBOX_GCC_LINK in
	full)
	       	ARG_LINE="$C_CXX_FLAGS $EMBOX_IMPORTED_LDFLAGS $EMBOX_IMPORTED_LDFLAGS_FULL"
		;;
	*)
	       	ARG_LINE="$C_CXX_FLAGS $EMBOX_IMPORTED_LDFLAGS -Wl,-r"
		;;
esac

echo "ARGLINE = $ARG_LINE"
echo "EMBOX_IMPORTED_CPPFLAGS = $EMBOX_IMPORTED_CPPFLAGS"



case " $@ " in
	*" -c "*) ARG_LINE="$C_CXX_FLAGS";;
	*" -E "*) ARG_LINE=;;
	*" -shared "*) echo "Can't build shared objects"; exit 1;;
	*" -lm "*) echo -e "\n\ERROR!!! Linking with libm\n\n"; exit 1;;
	*" -l"*) echo -e "\n\nWARNING!!! You're linking something with it\n\n";;
esac

ARG_LINE="$ARG_LINE $EMBOX_IMPORTED_CPPFLAGS"
PWD_ARG_LINE="$(for i in $ARG_LINE; do echo ${i/$PWD/.}; done)"
# echo "$EMBOX_CROSS_COMPILE${cmd#arch-embox-} $@ $PWD_ARG_LINE" >&2

arr=(`echo $@ | xargs`)
POSTARGS="-Wno-implicit-int "
POSTARGS="-D'__strong_alias(alias, sym)=__asm__(\".global \" #alias \"\\n\" #alias \" = \" #sym);' $POSTARGS"

echo PIZDA $POSTARGS

for ((i=1; i<=${#arr[@]}; i++ )); do
	#echo "$i"
	#echo "${arr[$i]}" #| sed -n "s/-march\=\(.*\)/\1/"
	declare -x res=`echo "${arr[$i]}" | sed -n "s/-march\=\(.*\)/\1/p"`

	if [ "x$res" != "x" ]; then
		echo $i ${arr[$i]} $res

		case "$res" in
		armv7em)
			echo "AAAAAAAAAAAAAAAA"
			POSTARGS="-target $res--- $POSTARGS"
			;;
		esac
		arr[$i]=""
	fi

	#let i+=1
done

set -x
clang $( IFS=$' '; echo "${arr[*]}" )  $PWD_ARG_LINE $POSTARGS
exit $?
